digraph AST {
  node1 [label="classA{var:Int<-0;value():Int{var};method2(num1:Int,num2:Int):B{(letx:Intin{x<-num1+num2;(newB).set_var(x);})};};"];
  node0 -> node1;
  node2 [label="A"];
  node1 -> node2;
  node3 [label="var:Int<-0;value():Int{var};method2(num1:Int,num2:Int):B{(letx:Intin{x<-num1+num2;(newB).set_var(x);})};"];
  node1 -> node3;
  node4 [label="var:Int<-0;"];
  node3 -> node4;
  node5 [label="var:Int<-0;"];
  node4 -> node5;
  node6 [label="Int"];
  node5 -> node6;
  node7 [label="0"];
  node5 -> node7;
  node8 [label="value():Int{var};"];
  node3 -> node8;
  node9 [label="value():Int{var};"];
  node8 -> node9;
  node10 [label="Int"];
  node9 -> node10;
  node11 [label="var"];
  node9 -> node11;
  node12 [label="var"];
  node11 -> node12;
  node13 [label="method2(num1:Int,num2:Int):B{(letx:Intin{x<-num1+num2;(newB).set_var(x);})};"];
  node3 -> node13;
  node14 [label="method2(num1:Int,num2:Int):B{(letx:Intin{x<-num1+num2;(newB).set_var(x);})};"];
  node13 -> node14;
  node15 [label="num1:Int,num2:Int"];
  node14 -> node15;
  node16 [label="num1:Int"];
  node15 -> node16;
  node17 [label="Int"];
  node16 -> node17;
  node18 [label="num2:Int"];
  node15 -> node18;
  node19 [label="Int"];
  node18 -> node19;
  node20 [label="B"];
  node14 -> node20;
  node21 [label="(letx:Intin{x<-num1+num2;(newB).set_var(x);})"];
  node14 -> node21;
  node22 [label="(letx:Intin{x<-num1+num2;(newB).set_var(x);})"];
  node21 -> node22;
  node23 [label="x:Int"];
  node22 -> node23;
  node24 [label="Int"];
  node23 -> node24;
  node25 [label="x<-num1+num2;"];
  node22 -> node25;
  node26 [label="num1+num2"];
  node25 -> node26;
  node27 [label="num1"];
  node26 -> node27;
  node28 [label="num2"];
  node26 -> node28;
  node29 [label="(newB).set_var(x);"];
  node22 -> node29;
  node30 [label="(newB)"];
  node29 -> node30;
  node31 [label="newB"];
  node30 -> node31;
  node32 [label="x"];
  node29 -> node32;
}
